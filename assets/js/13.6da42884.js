(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{541:function(t,r,v){"use strict";v.r(r);var _=v(8),e=Object(_.a)({},(function(){var t=this,r=t.$createElement,v=t._self._c||r;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"浏览器的渲染过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的渲染过程"}},[t._v("#")]),t._v(" 浏览器的渲染过程")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("解析HTML，构建DOM树")])]),t._v(" "),v("li",[v("p",[t._v("解析CSS，生成CSS规则树")])]),t._v(" "),v("li",[v("p",[t._v("合并DOM树和CSS规则，生成render树")])]),t._v(" "),v("li",[v("p",[t._v("布局render树（Layout/reflow），负责各元素尺寸、位置的计算")])]),t._v(" "),v("li",[v("p",[t._v("绘制render树（paint），绘制页面像素信息")])]),t._v(" "),v("li",[v("p",[t._v("浏览器会将各层的信息发送给GPU，GPU会将各层合成（composite），显示在屏幕上")])])]),t._v(" "),v("p",[t._v("PS:\nreflow：也称作layout，中文叫回流，一般意味着元素的内容、结构、位置或尺寸发生了变化，需要重新计算样式和渲染树，这个过程称为reflow。")]),t._v(" "),v("p",[t._v("repaint：中文重绘，意味着元素发生的改变只是影响了元素的一些外观之类的时候(例如：背景色，边框颜色，文字颜色等)，此时只需要应用新样式绘制这个元素就可以了。\n"),v("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2023/jpeg/26452493/1681273835963-50047637-314b-4521-9b58-d9b1a56f94c8.jpeg?x-oss-process=image%2Finterlace%2C1",alt:""}})]),t._v(" "),v("ol",[v("li",[t._v("根据 HTML 解析 DOM 树")])]),t._v(" "),v("p",[t._v("根据 HTML 的内容，将标签按照结构解析成为 DOM 树，DOM 树解析的过程是一个深度优先遍历。即先构建当前节点的所有子节点，再构建下一个兄弟节点。\n在读取 HTML 文档，构建 DOM 树的过程中，若遇到 script 标签，则 DOM 树的构建会暂停，直至脚本执行完毕。")]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[t._v("根据 CSS 解析生成 CSS 规则树")])]),t._v(" "),v("p",[t._v("解析 CSS 规则树时 js 执行将暂停，直至 CSS 规则树就绪。\n浏览器在 CSS 规则树生成之前不会进行渲染。")]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v("结合 DOM 树和 CSS 规则树，生成渲染树")])]),t._v(" "),v("p",[t._v("DOM 树和 CSS 规则树全部准备好了以后，浏览器才会开始构建渲染树。\n精简 CSS 并可以加快 CSS 规则树的构建，从而加快页面相应速度。")]),t._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[t._v("根据渲染树计算每一个节点的信息（布局）")])]),t._v(" "),v("p",[t._v("布局：通过渲染树中渲染对象的信息，计算出每一个渲染对象的位置和尺寸\n回流：在布局完成后，发现了某个部分发生了变化影响了布局，那就需要倒回去重新渲染。")]),t._v(" "),v("ol",{attrs:{start:"5"}},[v("li",[t._v("根据计算好的信息绘制页面")])]),t._v(" "),v("p",[t._v("绘制阶段，系统会遍历呈现树，并调用呈现器的“paint”方法，将呈现器的内容显示在屏幕上。\n重绘：某个元素的背景颜色，文字颜色等，不影响元素周围或内部布局的属性，将只会引起浏览器的重绘。\n回流：某个元素的尺寸发生了变化，则需重新计算渲染树，重新渲染。")])])}),[],!1,null,null,null);r.default=e.exports}}]);