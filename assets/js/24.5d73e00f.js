(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{554:function(t,_,s){"use strict";s.r(_);var v=s(8),a=Object(v.a)({},(function(){var t=this,_=t.$createElement,s=t._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器输入地址之后发生了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器输入地址之后发生了什么"}},[t._v("#")]),t._v(" 浏览器输入地址之后发生了什么")]),t._v(" "),s("h3",{attrs:{id:"www万维网"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#www万维网"}},[t._v("#")]),t._v(" WWW万维网")]),t._v(" "),s("p",[t._v("www，其实是World Wide Web的缩写，中文翻译为万维网。互联网并不等同万维网（WWW），万维网只是一个基于超文本相互链接而成的全球性系统，且是互联网所能提供的服务其中之一。")]),t._v(" "),s("p",[t._v("互联网带有范围广泛的信息资源和服务，除此以外还有文件传输（FTP）、电子邮件（E-mail）、远程登录（Telnet）等。")]),t._v(" "),s("p",[t._v("而为了区分互联网中的各种应用，就有了不同的子域名，比如互联网就以www作为子域名，文件传输以ftp作为子域名，电子邮件以mail作为子域名。")]),t._v(" "),s("p",[t._v("购买域名时需要配置域名解析，解析时需要填入主机记录部分：\n"),s("img",{attrs:{src:t.$withBase("/network/http_insert/16757487052395.jpg"),alt:"foo"}})]),t._v(" "),s("p",[t._v("当我们设置www作为域名前缀的时候，那么访问www.aliyun.com即可访问网站。当我们设置@作为域名前缀的时候，直接访问aliyun.com就可以访问网站了。")]),t._v(" "),s("p",[t._v("**也正是因为万维网是互联网中最重要的一部分，很多域名的最主要用途也是搭建web网站，所以，会有很多公司直接忽略www。\n**")]),t._v(" "),s("p",[t._v("这也解释了，为什么像github.com不需要www前缀就可以访问的原因。")]),t._v(" "),s("h3",{attrs:{id:"dns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[t._v("#")]),t._v(" DNS")]),t._v(" "),s("h4",{attrs:{id:"dns是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns是什么"}},[t._v("#")]),t._v(" DNS是什么")]),t._v(" "),s("p",[t._v("DNS（Domain Name Server）,用来将域名转换为IP地址。一个域名对应一个ip，但是一个ip可以对应多个域名。")]),t._v(" "),s("p",[t._v("DNS中保存了一张域名与ip地址的表。")]),t._v(" "),s("p",[t._v("gTLD： generic Top-Level DNS Server顶级域名服务器。为所有.com .net .edu后缀做域名服务器解析。")]),t._v(" "),s("h4",{attrs:{id:"dns服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns服务器"}},[t._v("#")]),t._v(" DNS服务器")]),t._v(" "),s("p",[t._v("① "),s("strong",[t._v("根域名服务器")]),t._v("：在有些场合，www.xxx.com 被写成 www.xxx.com. 即最后还会多出一个点。这个点就是根域名。\n理论来说：所有域名的查询都必须先查询根域名。ICANN 维护着一张列表（根域名列表），里面记载着顶级域名和对应的托管商。")]),t._v(" "),s("p",[t._v("② "),s("strong",[t._v("顶级域名服务器")]),t._v("：用来管理注册在该顶级域名下的所有二级域名的，记录这些二级域名的 IP 地址。")]),t._v(" "),s("p",[t._v("③ "),s("strong",[t._v("权限域名服务器")]),t._v("：那么权限域名服务器就是负责管理一个“区”的域名服务器。而不是三级或者四级域名。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/network/http_insert/16757595088467.jpg"),alt:"foo"}}),t._v(" "),s("p",[t._v("区和域是不同的，区可以有多种不同的划分方法。这个需要根据公司来具体划分。")]),t._v(" "),s("p",[t._v("④"),s("strong",[t._v("本地域名服务器")]),t._v("：是电脑解析时的默认域名服务器，即电脑中设置的首选 DNS 服务器和备选 DNS 服务器。")]),t._v(" "),s("p",[t._v("当我们输入域名时，这个查询请求报文就发送给该主机的本地域名服务器。本地域名服务器管理本地域名的解析和映射，并且能够向上级域名服务器进行查询。")]),t._v(" "),s("h4",{attrs:{id:"dns缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns缓存"}},[t._v("#")]),t._v(" DNS缓存")]),t._v(" "),s("p",[t._v("由于每个时刻都有无数网民要上网，那每次都去访问本地域名服务器去获取 IP 地址显然是不实际的。解决方法就是使用缓存保存域名和 IP 地址的映射。")]),t._v(" "),s("p",[t._v("计算机中 DNS 记录在本地有两种缓存方式：浏览器缓存和操作系统缓存。")]),t._v(" "),s("ol",[s("li",[t._v("浏览器缓存：浏览器在获取网站域名的实际 IP 地址后会对其进行缓存，减少网络请求的损耗。每种浏览器都有一个固定的 DNS 缓存时间，如 Chrome 的过期时间是 1 分钟，在这个期限内不会重新请求 DNS")]),t._v(" "),s("li",[t._v("操作系统缓存：操作系统的缓存其实是用户自己配置的 hosts 文件。比如 Windows10 下的 hosts 文件存放在 C:\\Windows\\System32\\drivers\\etc\\hosts")])]),t._v(" "),s("h4",{attrs:{id:"dns查询方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns查询方式"}},[t._v("#")]),t._v(" DNS查询方式：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("递归查询：")]),t._v(" 如果请求的接收者不知道所请求的内容，那么"),s("strong",[t._v("接收者将扮演请求者")]),t._v("，发出有关请求，直到获得所需要的内容，然后将内容返回给最初的请求者。\n"),s("img",{attrs:{src:t.$withBase("/network/http_insert/16757598158776.jpg"),alt:"foo"}})])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("迭代查询：")]),t._v(" 迭代是指，遍历域名服务器，由本地服务器分别请求各域名服务器进行ip地址的查询。\n"),s("img",{attrs:{src:t.$withBase("/network/http_insert/16757599521952.jpg"),alt:"foo"}})])])]),t._v(" "),s("h4",{attrs:{id:"dns服务器解析流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dns服务器解析流程"}},[t._v("#")]),t._v(" DNS服务器解析流程")]),t._v(" "),s("p",[t._v("当在浏览器输入域名后：")]),t._v(" "),s("ol",[s("li",[t._v("浏览器缓存")]),t._v(" "),s("li",[t._v("本地hosts文件（本地DNS缓存）")]),t._v(" "),s("li",[t._v("本地DNS服务器缓存")]),t._v(" "),s("li",[t._v("本地DNS服务器")]),t._v(" "),s("li",[t._v("DNS服务器递归查找")])]),t._v(" "),s("h5",{attrs:{id:"_1-浏览器缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器缓存"}},[t._v("#")]),t._v(" 1. 浏览器缓存")]),t._v(" "),s("p",[t._v("首先搜索浏览器的 DNS 缓存，缓存中维护一张域名与 IP 地址的对应表；")]),t._v(" "),s("h5",{attrs:{id:"_2-本地hosts文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-本地hosts文件"}},[t._v("#")]),t._v(" 2. 本地hosts文件")]),t._v(" "),s("p",[t._v("若没有命中，则继续搜索操作系统重的DNS缓存。即：host文件，修改hosts文件对于开发者来说并不陌生，这样我们可以不改变线上域名的配置，然后直接通过域名访问我们想要访问的机器。")]),t._v(" "),s("h5",{attrs:{id:"_3-本地dns服务器缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-本地dns服务器缓存"}},[t._v("#")]),t._v(" 3. 本地DNS服务器缓存")]),t._v(" "),s("p",[t._v("若仍然没有命中。本地操作系统将域名发送到本地域名服务器，本地域名服务器查询自己的DNS缓存，查找到就返回结果。（注意：主机和本地域名服务器之间的查询方式是递归查询）")]),t._v(" "),s("p",[t._v("如果之前已经解析过，本地的DNS缓存里就有对应的ip地址。如果是一次访问，那本地DNS服务器并没有这个域名的ip地址。")]),t._v(" "),s("h5",{attrs:{id:"_3-本地dns服务器迭代查询域名服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-本地dns服务器迭代查询域名服务器"}},[t._v("#")]),t._v(" 3. 本地DNS服务器迭代查询域名服务器：")]),t._v(" "),s("p",[t._v("若本地域名服务器也没有命中，那么就有本地域名服务器向上级域名服务器进行查询。本地域名服务器和其他域名服务器之间的查询方式是迭代查询，防止根域名服务器压力过大；\n"),s("img",{attrs:{src:t.$withBase("/network/http_insert/16757603912815.jpg"),alt:"foo"}})]),t._v(" "),s("ol",[s("li",[t._v("首先本地域名服务器向根域名服务器发起请求，根域名服务器是最高层次的，它并不会直接指明这个域名对应的 IP 地址，而是返回顶级域名服务器的地址，也就是说给本地域名服务器指明一条道路，让他去这里寻找答案。")]),t._v(" "),s("li",[t._v("本地域名服务器拿到这个顶级域名服务器的地址后，就向其发起请求，获取权限域名服务器的地址。")]),t._v(" "),s("li",[t._v("本地域名服务器根据权限域名服务器的地址向其发起请求，最终得到该域名对应的 IP 地址。")]),t._v(" "),s("li",[t._v("本地域名服务器将得到的 IP 地址返回给操作系统，同时自己将 IP 地址缓存起来")]),t._v(" "),s("li",[t._v("至此，浏览器就得到了域名对应的 IP 地址，并将 IP 地址缓存起来")])])])}),[],!1,null,null,null);_.default=a.exports}}]);