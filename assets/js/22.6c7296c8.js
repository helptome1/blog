(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{552:function(t,a,v){"use strict";v.r(a);var r=v(8),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"http"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" Http")]),t._v(" "),v("h3",{attrs:{id:"http-https"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-https"}},[t._v("#")]),t._v(" Http/Https")]),t._v(" "),v("p",[t._v("HTTP：HyperText Transfer Protocol 超文本传输协议。（html 超文本标记语言），HTTP 就是客户端和服务端请求和应答的标准，用于从 WEB 服务器传输超文本到本地浏览器的传输协议。")]),t._v(" "),v("p",[t._v("HTTPS：Hyper Transfer Protocol Secure 超文本传输安全协议。HTTP 的安全版本：SSL/TLS.")]),t._v(" "),v("h3",{attrs:{id:"网络模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络模型"}},[t._v("#")]),t._v(" 网络模型")]),t._v(" "),v("p",[t._v("网络设计者以分层的方式组织协议，每个协议属于层次模型之一。每一层都是向它的上一层提供服务("),v("code",[t._v("service")]),t._v(")，即所谓的服务模型("),v("code",[t._v("service model")]),t._v(")。")]),t._v(" "),v("p",[t._v("因特网的协议栈由五个部分组成：物理层、链路层、网络层、运输层和应用层。我们采用自上而下的方法研究其原理，也就是应用层 -> 物理层的方式\n"),v("img",{attrs:{src:t.$withBase("/network/http.jpg"),alt:"foo"}})]),t._v(" "),v("h4",{attrs:{id:"应用层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#应用层"}},[t._v("#")]),t._v(" 应用层")]),t._v(" "),v("p",[t._v("应用层是网络应用程序和网络协议存放的分层，因特网的应用层包括许多协议，例如我们学 web 离不开的 HTTP，电子邮件传送协议 SMTP、端系统文件上传协议 FTP、还有为我们进行域名解析的 DNS 协议。")]),t._v(" "),v("p",[t._v("应用层协议分布在多个端系统上，一个端系统应用程序与另外一个端系统应用程序交换信息分组，我们把位于应用层的信息分组称为 报文(message)。")]),t._v(" "),v("h4",{attrs:{id:"运输层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#运输层"}},[t._v("#")]),t._v(" 运输层")]),t._v(" "),v("p",[t._v("因特网的运输层在应用程序断点之间"),v("strong",[t._v("传送应用程序报文")]),t._v("，在这一层主要有两种传输协议 TCP 和 UDP，利用这两者中的任何一个都能够传输报文，不过这两种协议有巨大的不同。")]),t._v(" "),v("p",[t._v("TCP 向它的应用程序提供了面向连接的服务，它能够控制并确认报文是否到达，并提供了拥塞机制来控制网络传输，因此当网络拥塞时，会抑制其传输速率。")]),t._v(" "),v("p",[t._v("UDP 协议向它的应用程序提供了无连接服务。它不具备可靠性的特征，没有流量控制，也没有拥塞控制。我们把运输层的分组称为 报文段(segment)")]),t._v(" "),v("h4",{attrs:{id:"网络层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络层"}},[t._v("#")]),t._v(" 网络层")]),t._v(" "),v("p",[t._v("因特网的网络层负责将称为 "),v("code",[t._v("数据报(datagram)")]),t._v(" 的网络分层从一台主机移动到另一台主机。网络层一个非常重要的协议是 IP 协议，所有具有网络层的因特网组件都必须运行 IP 协议，IP 协议是一种网际协议，除了 IP 协议外，网络层还包括一些其他网际协议和路由选择协议，一般把网络层就称为 IP 层，由此可知 IP 协议的重要性。")]),t._v(" "),v("p",[t._v("数据在网络上传播，网络的机构是复杂的，条条道路同罗马，所以从发送地到接收地有很多可能的路线，怎样选择路线才能保证数据更快到达，这里涉及到很多如'最短路径'的算法问题，所以网络层处理网络间路由，确保数据及时传送(路由器)。")]),t._v(" "),v("h4",{attrs:{id:"数据链路层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据链路层"}},[t._v("#")]),t._v(" 数据链路层")]),t._v(" "),v("p",[t._v("现在我们有应用程序通信的协议，有了给应用程序提供运输的协议（TCP），还有了用于约定发送位置的 IP 协议，那么如何才能真正的发送数据呢？为了将分组从一个节点（主机或路由器）运输到另一个节点，网络层必须依靠链路层提供服务。链路层的例子包括以太网、WiFi 和电缆接入的 "),v("code",[t._v("DOCSIS")]),t._v(" 协议，因为数据从源目的地传送通常需要经过几条链路，一个数据包可能被沿途不同的链路层协议处理，我们把链路层的分组称为 "),v("code",[t._v("帧(frame)")])]),t._v(" "),v("p",[t._v("路由器在互联网中负责 IP 地址的查找，但是在局域网内，使用的是私有 IP，这个时候就需要处理局域网和私有 IP 之间查找和传输的问题，所以数据链路层负责无错传输数据，确认帧、发错重传等(交换机)")]),t._v(" "),v("h4",{attrs:{id:"物理层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#物理层"}},[t._v("#")]),t._v(" 物理层")]),t._v(" "),v("p",[t._v("网络的传输总得通过媒介，所以物理层提网卡、网线、双绞线、同轴电缆、中继器等媒介")]),t._v(" "),v("p",[t._v("虽然链路层的作用是将帧从一个端系统运输到另一个端系统，而物理层的作用是将帧中的一个个 "),v("code",[t._v("比特")]),t._v(" 从一个节点运输到另一个节点，物理层的协议仍然使用链路层协议，这些协议与实际的物理传输介质有关，例如，以太网有很多物理层协议：关于双绞铜线、关于同轴电缆、关于光纤等等。")])])}),[],!1,null,null,null);a.default=_.exports}}]);